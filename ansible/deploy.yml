---
- hosts: k3s
  become: yes
  tasks:
    # Install k3s using the official install script
    - name: Install k3s
      ansible.builtin.shell: curl -sfL https://get.k3s.io | sh -
      args:
        executable: /bin/bash

    # Check if k3s server is running
    - name: Check if k3s server is running
      command: systemctl is-active k3s
      register: check_k3s_running
      ignore_errors: yes

    - name: Fail if k3s server is not running
      fail:
        msg: "k3s server is not running. Please start the k3s server."
      when: check_k3s_running.rc != 0

    # Install Helm if not installed
    - name: Install Helm
      ansible.builtin.shell: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      args:
        executable: /bin/bash

    # Restart cert-manager-webhook deployment
    - name: Restart cert-manager-webhook
      ansible.builtin.shell: |
        kubectl rollout restart deployment cert-manager-webhook -n cert-manager
      register: cert_manager_rollout
      ignore_errors: yes

    - name: Wait for cert-manager-webhook to be available
      ansible.builtin.command: kubectl rollout status deployment cert-manager-webhook -n cert-manager
      when: cert_manager_rollout is success
      retries: 5
      delay: 15
      ignore_errors: yes

    # Remove existing conflicting resources
    - name: Remove conflicting resources from previous releases
      ansible.builtin.shell: |
        kubectl delete ingress nginx-ingress --namespace prod --ignore-not-found
        kubectl delete secret nginx-app-tls --namespace prod --ignore-not-found
        kubectl delete pvc nginx-ingress-pvc --namespace prod --ignore-not-found
      ignore_errors: yes

    # Ensure namespaces exist
    - name: Ensure namespaces exist
      ansible.builtin.command:
        cmd: kubectl create namespace {{ item }}
        creates: /tmp/{{ item }}-namespace
      loop:
        - staging
        - prod
      register: namespace_creation
      ignore_errors: yes

    # Deploy the weather-app Helm chart to both namespaces
    - name: Deploy weather-app-chart using Helm
      shell: helm upgrade --install weather-app-chart /root/final-project/final-project/weather-app-chart --namespace {{ item }}
      loop:
        - staging
        - prod
      register: helm_result

    # Fail task if Helm chart deployment fails
    - name: Check Helm deployment result
      fail:
        msg: "Helm deployment for {{ item }} failed"
      when: helm_result.rc != 0

    # Ensure backup directory exists
    - name: Ensure backup directory exists
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server/backup
        state: directory
        mode: '0755'

    # Create backup script
    - name: Create backup script
      ansible.builtin.copy:
        dest: /usr/local/bin/k3s-backup.sh
        content: |
          #!/bin/bash
          BACKUP_DIR="/var/lib/rancher/k3s/server/backup"
          DATE=$(date +%Y%m%d%H%M%S)
          sudo k3s etcd-snapshot save --name snapshot-$DATE
          if [ $? -eq 0 ]; then
            sudo mv /var/lib/rancher/k3s/server/db/snapshots/snapshot-$DATE $BACKUP_DIR
            echo "Backup successful: $BACKUP_DIR/snapshot-$DATE"
          else
            echo "Backup failed" >&2
          fi
        mode: '0755'

    # Schedule the backup script using cron
    - name: Schedule backup script with cron
      ansible.builtin.cron:
        name: "K3s backup"
        minute: "0"
        hour: "0"
        job: "sudo /usr/local/bin/k3s-backup.sh"
